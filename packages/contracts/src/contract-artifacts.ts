/* eslint-disable @typescript-eslint/no-var-requires */
/*
  THIS FILE IS AUTOMATICALLY GENERATED.
  DO NOT EDIT.
  */

const ovm__iL1ChugSplashDeployer = require('../artifacts-ovm/contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol/iL1ChugSplashDeployer.json')
const ovm__L1ChugSplashProxy = require('../artifacts-ovm/contracts/chugsplash/L1ChugSplashProxy.sol/L1ChugSplashProxy.json')
const ovm__iOVM_CrossDomainMessenger = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_CrossDomainMessenger.sol/iOVM_CrossDomainMessenger.json')
const ovm__iOVM_L1CrossDomainMessenger = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L1CrossDomainMessenger.sol/iOVM_L1CrossDomainMessenger.json')
const ovm__iOVM_L1MultiMessageRelayer = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L1MultiMessageRelayer.sol/iOVM_L1MultiMessageRelayer.json')
const ovm__iOVM_L2CrossDomainMessenger = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L2CrossDomainMessenger.sol/iOVM_L2CrossDomainMessenger.json')
const ovm__iOVM_L1ERC20Bridge = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1ERC20Bridge.sol/iOVM_L1ERC20Bridge.json')
const ovm__iOVM_L1StandardBridge = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol/iOVM_L1StandardBridge.json')
const ovm__iOVM_L2ERC20Bridge = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L2ERC20Bridge.sol/iOVM_L2ERC20Bridge.json')
const ovm__iOVM_CanonicalTransactionChain = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/chain/iOVM_CanonicalTransactionChain.sol/iOVM_CanonicalTransactionChain.json')
const ovm__iOVM_ChainStorageContainer = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/chain/iOVM_ChainStorageContainer.sol/iOVM_ChainStorageContainer.json')
const ovm__iOVM_StateCommitmentChain = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/chain/iOVM_StateCommitmentChain.sol/iOVM_StateCommitmentChain.json')
const ovm__iOVM_ExecutionManager = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/execution/iOVM_ExecutionManager.sol/iOVM_ExecutionManager.json')
const ovm__iOVM_SafetyChecker = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/execution/iOVM_SafetyChecker.sol/iOVM_SafetyChecker.json')
const ovm__iOVM_StateManager = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/execution/iOVM_StateManager.sol/iOVM_StateManager.json')
const ovm__iOVM_StateManagerFactory = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/execution/iOVM_StateManagerFactory.sol/iOVM_StateManagerFactory.json')
const ovm__iOVM_DeployerWhitelist = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_DeployerWhitelist.sol/iOVM_DeployerWhitelist.json')
const ovm__iOVM_ECDSAContractAccount = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_ECDSAContractAccount.sol/iOVM_ECDSAContractAccount.json')
const ovm__iOVM_L1MessageSender = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_L1MessageSender.sol/iOVM_L1MessageSender.json')
const ovm__iOVM_L2ToL1MessagePasser = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_L2ToL1MessagePasser.sol/iOVM_L2ToL1MessagePasser.json')
const ovm__ERC20 = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/ERC20.json')
const ovm__Errors = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/Errors.json')
const ovm__iOVM_BondManager = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/iOVM_BondManager.json')
const ovm__iOVM_FraudVerifier = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_FraudVerifier.sol/iOVM_FraudVerifier.json')
const ovm__iOVM_StateTransitioner = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_StateTransitioner.sol/iOVM_StateTransitioner.json')
const ovm__iOVM_StateTransitionerFactory = require('../artifacts-ovm/contracts/optimistic-ethereum/iOVM/verification/iOVM_StateTransitionerFactory.sol/iOVM_StateTransitionerFactory.json')
const ovm__Lib_CrossDomainUtils = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/bridge/Lib_CrossDomainUtils.sol/Lib_CrossDomainUtils.json')
const ovm__OVM_CrossDomainEnabled = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/bridge/OVM_CrossDomainEnabled.sol/OVM_CrossDomainEnabled.json')
const ovm__Lib_EIP155Tx = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/codec/Lib_EIP155Tx.sol/Lib_EIP155Tx.json')
const ovm__Lib_OVMCodec = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/codec/Lib_OVMCodec.sol/Lib_OVMCodec.json')
const ovm__Lib_PredeployAddresses = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/constants/Lib_PredeployAddresses.sol/Lib_PredeployAddresses.json')
const ovm__Lib_AddressManager = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/resolver/Lib_AddressManager.sol/Lib_AddressManager.json')
const ovm__Lib_AddressResolver = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/resolver/Lib_AddressResolver.sol/Lib_AddressResolver.json')
const ovm__Lib_ResolvedDelegateProxy = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/resolver/Lib_ResolvedDelegateProxy.sol/Lib_ResolvedDelegateProxy.json')
const ovm__Lib_RLPReader = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/rlp/Lib_RLPReader.sol/Lib_RLPReader.json')
const ovm__Lib_RLPWriter = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/rlp/Lib_RLPWriter.sol/Lib_RLPWriter.json')
const ovm__IL2StandardERC20 = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/standards/IL2StandardERC20.sol/IL2StandardERC20.json')
const ovm__IWETH9 = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/standards/IWETH9.sol/IWETH9.json')
const ovm__L2StandardERC20 = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/standards/L2StandardERC20.sol/L2StandardERC20.json')
const ovm__Lib_MerkleTrie = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/trie/Lib_MerkleTrie.sol/Lib_MerkleTrie.json')
const ovm__Lib_SecureMerkleTrie = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/trie/Lib_SecureMerkleTrie.sol/Lib_SecureMerkleTrie.json')
const ovm__Lib_Buffer = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/utils/Lib_Buffer.sol/Lib_Buffer.json')
const ovm__Lib_Bytes32Utils = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/utils/Lib_Bytes32Utils.sol/Lib_Bytes32Utils.json')
const ovm__Lib_BytesUtils = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/utils/Lib_BytesUtils.sol/Lib_BytesUtils.json')
const ovm__Lib_ErrorUtils = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/utils/Lib_ErrorUtils.sol/Lib_ErrorUtils.json')
const ovm__Lib_MerkleTree = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/utils/Lib_MerkleTree.sol/Lib_MerkleTree.json')
const ovm__Lib_ExecutionManagerWrapper = require('../artifacts-ovm/contracts/optimistic-ethereum/libraries/wrappers/Lib_ExecutionManagerWrapper.sol/Lib_ExecutionManagerWrapper.json')
const ovm__mockOVM_BondManager = require('../artifacts-ovm/contracts/optimistic-ethereum/mockOVM/verification/mockOVM_BondManager.sol/mockOVM_BondManager.json')
const ovm__OVM_L1CrossDomainMessenger = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/bridge/messaging/OVM_L1CrossDomainMessenger.sol/OVM_L1CrossDomainMessenger.json')
const ovm__OVM_L2CrossDomainMessenger = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/bridge/messaging/OVM_L2CrossDomainMessenger.sol/OVM_L2CrossDomainMessenger.json')
const ovm__OVM_L2StandardBridge = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L2StandardBridge.sol/OVM_L2StandardBridge.json')
const ovm__OVM_L2StandardTokenFactory = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L2StandardTokenFactory.sol/OVM_L2StandardTokenFactory.json')
const ovm__OVM_ChainStorageContainer = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/chain/OVM_ChainStorageContainer.sol/OVM_ChainStorageContainer.json')
const ovm__OVM_StateCommitmentChain = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/chain/OVM_StateCommitmentChain.sol/OVM_StateCommitmentChain.json')
const ovm__OVM_SafetyChecker = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/execution/OVM_SafetyChecker.sol/OVM_SafetyChecker.json')
const ovm__OVM_StateManager = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/execution/OVM_StateManager.sol/OVM_StateManager.json')
const ovm__OVM_StateManagerFactory = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/execution/OVM_StateManagerFactory.sol/OVM_StateManagerFactory.json')
const ovm__ERC1820ImplementerInterface = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/ERC1820Registry.sol/ERC1820ImplementerInterface.json')
const ovm__ERC1820Registry = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/ERC1820Registry.sol/ERC1820Registry.json')
const ovm__OVM_DeployerWhitelist = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_DeployerWhitelist.sol/OVM_DeployerWhitelist.json')
const ovm__OVM_ECDSAContractAccount = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_ECDSAContractAccount.sol/OVM_ECDSAContractAccount.json')
const ovm__OVM_ETH = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_ETH.sol/OVM_ETH.json')
const ovm__OVM_ExecutionManagerWrapper = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_ExecutionManagerWrapper.sol/OVM_ExecutionManagerWrapper.json')
const ovm__OVM_GasPriceOracle = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_GasPriceOracle.sol/OVM_GasPriceOracle.json')
const ovm__OVM_L1MessageSender = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_L1MessageSender.sol/OVM_L1MessageSender.json')
const ovm__OVM_L2ToL1MessagePasser = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_L2ToL1MessagePasser.sol/OVM_L2ToL1MessagePasser.json')
const ovm__OVM_ProxyEOA = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_ProxyEOA.sol/OVM_ProxyEOA.json')
const ovm__OVM_SequencerEntrypoint = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_SequencerEntrypoint.sol/OVM_SequencerEntrypoint.json')
const ovm__OVM_SequencerFeeVault = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/predeploys/OVM_SequencerFeeVault.sol/OVM_SequencerFeeVault.json')
const ovm__Abs_FraudContributor = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/verification/Abs_FraudContributor.sol/Abs_FraudContributor.json')
const ovm__OVM_BondManager = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/verification/OVM_BondManager.sol/OVM_BondManager.json')
const ovm__OVM_FraudVerifier = require('../artifacts-ovm/contracts/optimistic-ethereum/OVM/verification/OVM_FraudVerifier.sol/OVM_FraudVerifier.json')
const ovm__Helper_GasMeasurer = require('../artifacts-ovm/contracts/test-helpers/Helper_GasMeasurer.sol/Helper_GasMeasurer.json')
const ovm__Helper_ModifiableStorage = require('../artifacts-ovm/contracts/test-helpers/Helper_ModifiableStorage.sol/Helper_ModifiableStorage.json')
const ovm__Helper_PredeployCaller = require('../artifacts-ovm/contracts/test-helpers/Helper_PrecompileCaller.sol/Helper_PredeployCaller.json')
const ovm__Helper_SimpleProxy = require('../artifacts-ovm/contracts/test-helpers/Helper_SimpleProxy.sol/Helper_SimpleProxy.json')
const ovm__Helper_TestRunner_CREATE = require('../artifacts-ovm/contracts/test-helpers/Helper_TestRunner.sol/Helper_TestRunner_CREATE.json')
const ovm__Helper_TestRunner = require('../artifacts-ovm/contracts/test-helpers/Helper_TestRunner.sol/Helper_TestRunner.json')
const ovm__Mock_FraudVerifier = require('../artifacts-ovm/contracts/test-helpers/Mock_FraudVerifier.sol/Mock_FraudVerifier.json')
const ovm__SafeMath = require('../artifacts-ovm/contracts/test-helpers/TestERC20.sol/SafeMath.json')
const ovm__TestERC20 = require('../artifacts-ovm/contracts/test-helpers/TestERC20.sol/TestERC20.json')
const ovm__TestLib_EIP155Tx = require('../artifacts-ovm/contracts/test-libraries/codec/TestLib_EIP155Tx.sol/TestLib_EIP155Tx.json')
const ovm__TestLib_OVMCodec = require('../artifacts-ovm/contracts/test-libraries/codec/TestLib_OVMCodec.sol/TestLib_OVMCodec.json')
const ovm__TestLib_RLPReader = require('../artifacts-ovm/contracts/test-libraries/rlp/TestLib_RLPReader.sol/TestLib_RLPReader.json')
const ovm__TestLib_RLPWriter = require('../artifacts-ovm/contracts/test-libraries/rlp/TestLib_RLPWriter.sol/TestLib_RLPWriter.json')
const ovm__TestLib_MerkleTrie = require('../artifacts-ovm/contracts/test-libraries/trie/TestLib_MerkleTrie.sol/TestLib_MerkleTrie.json')
const ovm__TestLib_SecureMerkleTrie = require('../artifacts-ovm/contracts/test-libraries/trie/TestLib_SecureMerkleTrie.sol/TestLib_SecureMerkleTrie.json')
const ovm__TestLib_Buffer = require('../artifacts-ovm/contracts/test-libraries/utils/TestLib_Buffer.sol/TestLib_Buffer.json')
const ovm__TestLib_Bytes32Utils = require('../artifacts-ovm/contracts/test-libraries/utils/TestLib_Bytes32Utils.sol/TestLib_Bytes32Utils.json')
const ovm__TestLib_BytesUtils = require('../artifacts-ovm/contracts/test-libraries/utils/TestLib_BytesUtils.sol/TestLib_BytesUtils.json')
const ovm__TestLib_MerkleTree = require('../artifacts-ovm/contracts/test-libraries/utils/TestLib_MerkleTree.sol/TestLib_MerkleTree.json')
const iL1ChugSplashDeployer = require('../artifacts/contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol/iL1ChugSplashDeployer.json')
const L1ChugSplashProxy = require('../artifacts/contracts/chugsplash/L1ChugSplashProxy.sol/L1ChugSplashProxy.json')
const iOVM_CrossDomainMessenger = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_CrossDomainMessenger.sol/iOVM_CrossDomainMessenger.json')
const iOVM_L1CrossDomainMessenger = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L1CrossDomainMessenger.sol/iOVM_L1CrossDomainMessenger.json')
const iOVM_L1MultiMessageRelayer = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L1MultiMessageRelayer.sol/iOVM_L1MultiMessageRelayer.json')
const iOVM_L2CrossDomainMessenger = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/messaging/iOVM_L2CrossDomainMessenger.sol/iOVM_L2CrossDomainMessenger.json')
const iOVM_L1ERC20Bridge = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1ERC20Bridge.sol/iOVM_L1ERC20Bridge.json')
const iOVM_L1StandardBridge = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol/iOVM_L1StandardBridge.json')
const iOVM_L2ERC20Bridge = require('../artifacts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L2ERC20Bridge.sol/iOVM_L2ERC20Bridge.json')
const iOVM_CanonicalTransactionChain = require('../artifacts/contracts/optimistic-ethereum/iOVM/chain/iOVM_CanonicalTransactionChain.sol/iOVM_CanonicalTransactionChain.json')
const iOVM_ChainStorageContainer = require('../artifacts/contracts/optimistic-ethereum/iOVM/chain/iOVM_ChainStorageContainer.sol/iOVM_ChainStorageContainer.json')
const iOVM_StateCommitmentChain = require('../artifacts/contracts/optimistic-ethereum/iOVM/chain/iOVM_StateCommitmentChain.sol/iOVM_StateCommitmentChain.json')
const iOVM_ExecutionManager = require('../artifacts/contracts/optimistic-ethereum/iOVM/execution/iOVM_ExecutionManager.sol/iOVM_ExecutionManager.json')
const iOVM_SafetyChecker = require('../artifacts/contracts/optimistic-ethereum/iOVM/execution/iOVM_SafetyChecker.sol/iOVM_SafetyChecker.json')
const iOVM_StateManager = require('../artifacts/contracts/optimistic-ethereum/iOVM/execution/iOVM_StateManager.sol/iOVM_StateManager.json')
const iOVM_StateManagerFactory = require('../artifacts/contracts/optimistic-ethereum/iOVM/execution/iOVM_StateManagerFactory.sol/iOVM_StateManagerFactory.json')
const iOVM_DeployerWhitelist = require('../artifacts/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_DeployerWhitelist.sol/iOVM_DeployerWhitelist.json')
const iOVM_ECDSAContractAccount = require('../artifacts/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_ECDSAContractAccount.sol/iOVM_ECDSAContractAccount.json')
const iOVM_L1MessageSender = require('../artifacts/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_L1MessageSender.sol/iOVM_L1MessageSender.json')
const iOVM_L2ToL1MessagePasser = require('../artifacts/contracts/optimistic-ethereum/iOVM/predeploys/iOVM_L2ToL1MessagePasser.sol/iOVM_L2ToL1MessagePasser.json')
const ERC20 = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/ERC20.json')
const Errors = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/Errors.json')
const iOVM_BondManager = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_BondManager.sol/iOVM_BondManager.json')
const iOVM_FraudVerifier = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_FraudVerifier.sol/iOVM_FraudVerifier.json')
const iOVM_StateTransitioner = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_StateTransitioner.sol/iOVM_StateTransitioner.json')
const iOVM_StateTransitionerFactory = require('../artifacts/contracts/optimistic-ethereum/iOVM/verification/iOVM_StateTransitionerFactory.sol/iOVM_StateTransitionerFactory.json')
const Lib_CrossDomainUtils = require('../artifacts/contracts/optimistic-ethereum/libraries/bridge/Lib_CrossDomainUtils.sol/Lib_CrossDomainUtils.json')
const OVM_CrossDomainEnabled = require('../artifacts/contracts/optimistic-ethereum/libraries/bridge/OVM_CrossDomainEnabled.sol/OVM_CrossDomainEnabled.json')
const Lib_EIP155Tx = require('../artifacts/contracts/optimistic-ethereum/libraries/codec/Lib_EIP155Tx.sol/Lib_EIP155Tx.json')
const Lib_OVMCodec = require('../artifacts/contracts/optimistic-ethereum/libraries/codec/Lib_OVMCodec.sol/Lib_OVMCodec.json')
const Lib_PredeployAddresses = require('../artifacts/contracts/optimistic-ethereum/libraries/constants/Lib_PredeployAddresses.sol/Lib_PredeployAddresses.json')
const Lib_AddressManager = require('../artifacts/contracts/optimistic-ethereum/libraries/resolver/Lib_AddressManager.sol/Lib_AddressManager.json')
const Lib_AddressResolver = require('../artifacts/contracts/optimistic-ethereum/libraries/resolver/Lib_AddressResolver.sol/Lib_AddressResolver.json')
const Lib_ResolvedDelegateProxy = require('../artifacts/contracts/optimistic-ethereum/libraries/resolver/Lib_ResolvedDelegateProxy.sol/Lib_ResolvedDelegateProxy.json')
const Lib_RLPReader = require('../artifacts/contracts/optimistic-ethereum/libraries/rlp/Lib_RLPReader.sol/Lib_RLPReader.json')
const Lib_RLPWriter = require('../artifacts/contracts/optimistic-ethereum/libraries/rlp/Lib_RLPWriter.sol/Lib_RLPWriter.json')
const IL2StandardERC20 = require('../artifacts/contracts/optimistic-ethereum/libraries/standards/IL2StandardERC20.sol/IL2StandardERC20.json')
const IWETH9 = require('../artifacts/contracts/optimistic-ethereum/libraries/standards/IWETH9.sol/IWETH9.json')
const L2StandardERC20 = require('../artifacts/contracts/optimistic-ethereum/libraries/standards/L2StandardERC20.sol/L2StandardERC20.json')
const Lib_MerkleTrie = require('../artifacts/contracts/optimistic-ethereum/libraries/trie/Lib_MerkleTrie.sol/Lib_MerkleTrie.json')
const Lib_SecureMerkleTrie = require('../artifacts/contracts/optimistic-ethereum/libraries/trie/Lib_SecureMerkleTrie.sol/Lib_SecureMerkleTrie.json')
const Lib_Buffer = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_Buffer.sol/Lib_Buffer.json')
const Lib_Bytes32Utils = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_Bytes32Utils.sol/Lib_Bytes32Utils.json')
const Lib_BytesUtils = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_BytesUtils.sol/Lib_BytesUtils.json')
const Lib_ErrorUtils = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_ErrorUtils.sol/Lib_ErrorUtils.json')
const Lib_EthUtils = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_EthUtils.sol/Lib_EthUtils.json')
const Lib_MerkleTree = require('../artifacts/contracts/optimistic-ethereum/libraries/utils/Lib_MerkleTree.sol/Lib_MerkleTree.json')
const Lib_ExecutionManagerWrapper = require('../artifacts/contracts/optimistic-ethereum/libraries/wrappers/Lib_ExecutionManagerWrapper.sol/Lib_ExecutionManagerWrapper.json')
const mockOVM_BondManager = require('../artifacts/contracts/optimistic-ethereum/mockOVM/verification/mockOVM_BondManager.sol/mockOVM_BondManager.json')
const OVM_L1CrossDomainMessenger = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/messaging/OVM_L1CrossDomainMessenger.sol/OVM_L1CrossDomainMessenger.json')
const OVM_L1MultiMessageRelayer = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/messaging/OVM_L1MultiMessageRelayer.sol/OVM_L1MultiMessageRelayer.json')
const OVM_L2CrossDomainMessenger = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/messaging/OVM_L2CrossDomainMessenger.sol/OVM_L2CrossDomainMessenger.json')
const OVM_L1StandardBridge = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L1StandardBridge.sol/OVM_L1StandardBridge.json')
const OVM_L2StandardBridge = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L2StandardBridge.sol/OVM_L2StandardBridge.json')
const OVM_L2StandardTokenFactory = require('../artifacts/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L2StandardTokenFactory.sol/OVM_L2StandardTokenFactory.json')
const OVM_CanonicalTransactionChain = require('../artifacts/contracts/optimistic-ethereum/OVM/chain/OVM_CanonicalTransactionChain.sol/OVM_CanonicalTransactionChain.json')
const OVM_ChainStorageContainer = require('../artifacts/contracts/optimistic-ethereum/OVM/chain/OVM_ChainStorageContainer.sol/OVM_ChainStorageContainer.json')
const OVM_StateCommitmentChain = require('../artifacts/contracts/optimistic-ethereum/OVM/chain/OVM_StateCommitmentChain.sol/OVM_StateCommitmentChain.json')
const OVM_ExecutionManager = require('../artifacts/contracts/optimistic-ethereum/OVM/execution/OVM_ExecutionManager.sol/OVM_ExecutionManager.json')
const OVM_SafetyChecker = require('../artifacts/contracts/optimistic-ethereum/OVM/execution/OVM_SafetyChecker.sol/OVM_SafetyChecker.json')
const OVM_StateManager = require('../artifacts/contracts/optimistic-ethereum/OVM/execution/OVM_StateManager.sol/OVM_StateManager.json')
const OVM_StateManagerFactory = require('../artifacts/contracts/optimistic-ethereum/OVM/execution/OVM_StateManagerFactory.sol/OVM_StateManagerFactory.json')
const ERC1820ImplementerInterface = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/ERC1820Registry.sol/ERC1820ImplementerInterface.json')
const ERC1820Registry = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/ERC1820Registry.sol/ERC1820Registry.json')
const OVM_DeployerWhitelist = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_DeployerWhitelist.sol/OVM_DeployerWhitelist.json')
const OVM_ECDSAContractAccount = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_ECDSAContractAccount.sol/OVM_ECDSAContractAccount.json')
const OVM_ETH = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_ETH.sol/OVM_ETH.json')
const OVM_GasPriceOracle = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_GasPriceOracle.sol/OVM_GasPriceOracle.json')
const OVM_L1MessageSender = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_L1MessageSender.sol/OVM_L1MessageSender.json')
const OVM_L2ToL1MessagePasser = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_L2ToL1MessagePasser.sol/OVM_L2ToL1MessagePasser.json')
const OVM_ProxyEOA = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_ProxyEOA.sol/OVM_ProxyEOA.json')
const OVM_SequencerEntrypoint = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_SequencerEntrypoint.sol/OVM_SequencerEntrypoint.json')
const OVM_SequencerFeeVault = require('../artifacts/contracts/optimistic-ethereum/OVM/predeploys/OVM_SequencerFeeVault.sol/OVM_SequencerFeeVault.json')
const Abs_FraudContributor = require('../artifacts/contracts/optimistic-ethereum/OVM/verification/Abs_FraudContributor.sol/Abs_FraudContributor.json')
const OVM_BondManager = require('../artifacts/contracts/optimistic-ethereum/OVM/verification/OVM_BondManager.sol/OVM_BondManager.json')
const OVM_FraudVerifier = require('../artifacts/contracts/optimistic-ethereum/OVM/verification/OVM_FraudVerifier.sol/OVM_FraudVerifier.json')
const OVM_StateTransitioner = require('../artifacts/contracts/optimistic-ethereum/OVM/verification/OVM_StateTransitioner.sol/OVM_StateTransitioner.json')
const OVM_StateTransitionerFactory = require('../artifacts/contracts/optimistic-ethereum/OVM/verification/OVM_StateTransitionerFactory.sol/OVM_StateTransitionerFactory.json')
const Helper_GasMeasurer = require('../artifacts/contracts/test-helpers/Helper_GasMeasurer.sol/Helper_GasMeasurer.json')
const Helper_ModifiableStorage = require('../artifacts/contracts/test-helpers/Helper_ModifiableStorage.sol/Helper_ModifiableStorage.json')
const Helper_PredeployCaller = require('../artifacts/contracts/test-helpers/Helper_PrecompileCaller.sol/Helper_PredeployCaller.json')
const Helper_SimpleProxy = require('../artifacts/contracts/test-helpers/Helper_SimpleProxy.sol/Helper_SimpleProxy.json')
const Helper_TestRunner_CREATE = require('../artifacts/contracts/test-helpers/Helper_TestRunner.sol/Helper_TestRunner_CREATE.json')
const Helper_TestRunner = require('../artifacts/contracts/test-helpers/Helper_TestRunner.sol/Helper_TestRunner.json')
const Mock_FraudVerifier = require('../artifacts/contracts/test-helpers/Mock_FraudVerifier.sol/Mock_FraudVerifier.json')
const SafeMath = require('../artifacts/contracts/test-helpers/TestERC20.sol/SafeMath.json')
const TestERC20 = require('../artifacts/contracts/test-helpers/TestERC20.sol/TestERC20.json')
const TestLib_EIP155Tx = require('../artifacts/contracts/test-libraries/codec/TestLib_EIP155Tx.sol/TestLib_EIP155Tx.json')
const TestLib_OVMCodec = require('../artifacts/contracts/test-libraries/codec/TestLib_OVMCodec.sol/TestLib_OVMCodec.json')
const TestLib_RLPReader = require('../artifacts/contracts/test-libraries/rlp/TestLib_RLPReader.sol/TestLib_RLPReader.json')
const TestLib_RLPWriter = require('../artifacts/contracts/test-libraries/rlp/TestLib_RLPWriter.sol/TestLib_RLPWriter.json')
const TestLib_MerkleTrie = require('../artifacts/contracts/test-libraries/trie/TestLib_MerkleTrie.sol/TestLib_MerkleTrie.json')
const TestLib_SecureMerkleTrie = require('../artifacts/contracts/test-libraries/trie/TestLib_SecureMerkleTrie.sol/TestLib_SecureMerkleTrie.json')
const TestLib_Buffer = require('../artifacts/contracts/test-libraries/utils/TestLib_Buffer.sol/TestLib_Buffer.json')
const TestLib_Bytes32Utils = require('../artifacts/contracts/test-libraries/utils/TestLib_Bytes32Utils.sol/TestLib_Bytes32Utils.json')
const TestLib_BytesUtils = require('../artifacts/contracts/test-libraries/utils/TestLib_BytesUtils.sol/TestLib_BytesUtils.json')
const TestLib_EthUtils = require('../artifacts/contracts/test-libraries/utils/TestLib_EthUtils.sol/TestLib_EthUtils.json')
const TestLib_MerkleTree = require('../artifacts/contracts/test-libraries/utils/TestLib_MerkleTree.sol/TestLib_MerkleTree.json')

export const getContractArtifact = (name: string, ovm: boolean): any => {
  if (ovm) {
    return {
      iL1ChugSplashDeployer: ovm__iL1ChugSplashDeployer,
      L1ChugSplashProxy: ovm__L1ChugSplashProxy,
      iOVM_CrossDomainMessenger: ovm__iOVM_CrossDomainMessenger,
      iOVM_L1CrossDomainMessenger: ovm__iOVM_L1CrossDomainMessenger,
      iOVM_L1MultiMessageRelayer: ovm__iOVM_L1MultiMessageRelayer,
      iOVM_L2CrossDomainMessenger: ovm__iOVM_L2CrossDomainMessenger,
      iOVM_L1ERC20Bridge: ovm__iOVM_L1ERC20Bridge,
      iOVM_L1StandardBridge: ovm__iOVM_L1StandardBridge,
      iOVM_L2ERC20Bridge: ovm__iOVM_L2ERC20Bridge,
      iOVM_CanonicalTransactionChain: ovm__iOVM_CanonicalTransactionChain,
      iOVM_ChainStorageContainer: ovm__iOVM_ChainStorageContainer,
      iOVM_StateCommitmentChain: ovm__iOVM_StateCommitmentChain,
      iOVM_ExecutionManager: ovm__iOVM_ExecutionManager,
      iOVM_SafetyChecker: ovm__iOVM_SafetyChecker,
      iOVM_StateManager: ovm__iOVM_StateManager,
      iOVM_StateManagerFactory: ovm__iOVM_StateManagerFactory,
      iOVM_DeployerWhitelist: ovm__iOVM_DeployerWhitelist,
      iOVM_ECDSAContractAccount: ovm__iOVM_ECDSAContractAccount,
      iOVM_L1MessageSender: ovm__iOVM_L1MessageSender,
      iOVM_L2ToL1MessagePasser: ovm__iOVM_L2ToL1MessagePasser,
      ERC20: ovm__ERC20,
      Errors: ovm__Errors,
      iOVM_BondManager: ovm__iOVM_BondManager,
      iOVM_FraudVerifier: ovm__iOVM_FraudVerifier,
      iOVM_StateTransitioner: ovm__iOVM_StateTransitioner,
      iOVM_StateTransitionerFactory: ovm__iOVM_StateTransitionerFactory,
      Lib_CrossDomainUtils: ovm__Lib_CrossDomainUtils,
      OVM_CrossDomainEnabled: ovm__OVM_CrossDomainEnabled,
      Lib_EIP155Tx: ovm__Lib_EIP155Tx,
      Lib_OVMCodec: ovm__Lib_OVMCodec,
      Lib_PredeployAddresses: ovm__Lib_PredeployAddresses,
      Lib_AddressManager: ovm__Lib_AddressManager,
      Lib_AddressResolver: ovm__Lib_AddressResolver,
      Lib_ResolvedDelegateProxy: ovm__Lib_ResolvedDelegateProxy,
      Lib_RLPReader: ovm__Lib_RLPReader,
      Lib_RLPWriter: ovm__Lib_RLPWriter,
      IL2StandardERC20: ovm__IL2StandardERC20,
      IWETH9: ovm__IWETH9,
      L2StandardERC20: ovm__L2StandardERC20,
      Lib_MerkleTrie: ovm__Lib_MerkleTrie,
      Lib_SecureMerkleTrie: ovm__Lib_SecureMerkleTrie,
      Lib_Buffer: ovm__Lib_Buffer,
      Lib_Bytes32Utils: ovm__Lib_Bytes32Utils,
      Lib_BytesUtils: ovm__Lib_BytesUtils,
      Lib_ErrorUtils: ovm__Lib_ErrorUtils,
      Lib_MerkleTree: ovm__Lib_MerkleTree,
      Lib_ExecutionManagerWrapper: ovm__Lib_ExecutionManagerWrapper,
      mockOVM_BondManager: ovm__mockOVM_BondManager,
      OVM_L1CrossDomainMessenger: ovm__OVM_L1CrossDomainMessenger,
      OVM_L2CrossDomainMessenger: ovm__OVM_L2CrossDomainMessenger,
      OVM_L2StandardBridge: ovm__OVM_L2StandardBridge,
      OVM_L2StandardTokenFactory: ovm__OVM_L2StandardTokenFactory,
      OVM_ChainStorageContainer: ovm__OVM_ChainStorageContainer,
      OVM_StateCommitmentChain: ovm__OVM_StateCommitmentChain,
      OVM_SafetyChecker: ovm__OVM_SafetyChecker,
      OVM_StateManager: ovm__OVM_StateManager,
      OVM_StateManagerFactory: ovm__OVM_StateManagerFactory,
      ERC1820ImplementerInterface: ovm__ERC1820ImplementerInterface,
      ERC1820Registry: ovm__ERC1820Registry,
      OVM_DeployerWhitelist: ovm__OVM_DeployerWhitelist,
      OVM_ECDSAContractAccount: ovm__OVM_ECDSAContractAccount,
      OVM_ETH: ovm__OVM_ETH,
      OVM_ExecutionManagerWrapper: ovm__OVM_ExecutionManagerWrapper,
      OVM_GasPriceOracle: ovm__OVM_GasPriceOracle,
      OVM_L1MessageSender: ovm__OVM_L1MessageSender,
      OVM_L2ToL1MessagePasser: ovm__OVM_L2ToL1MessagePasser,
      OVM_ProxyEOA: ovm__OVM_ProxyEOA,
      OVM_SequencerEntrypoint: ovm__OVM_SequencerEntrypoint,
      OVM_SequencerFeeVault: ovm__OVM_SequencerFeeVault,
      Abs_FraudContributor: ovm__Abs_FraudContributor,
      OVM_BondManager: ovm__OVM_BondManager,
      OVM_FraudVerifier: ovm__OVM_FraudVerifier,
      Helper_GasMeasurer: ovm__Helper_GasMeasurer,
      Helper_ModifiableStorage: ovm__Helper_ModifiableStorage,
      Helper_PredeployCaller: ovm__Helper_PredeployCaller,
      Helper_SimpleProxy: ovm__Helper_SimpleProxy,
      Helper_TestRunner_CREATE: ovm__Helper_TestRunner_CREATE,
      Helper_TestRunner: ovm__Helper_TestRunner,
      Mock_FraudVerifier: ovm__Mock_FraudVerifier,
      SafeMath: ovm__SafeMath,
      TestERC20: ovm__TestERC20,
      TestLib_EIP155Tx: ovm__TestLib_EIP155Tx,
      TestLib_OVMCodec: ovm__TestLib_OVMCodec,
      TestLib_RLPReader: ovm__TestLib_RLPReader,
      TestLib_RLPWriter: ovm__TestLib_RLPWriter,
      TestLib_MerkleTrie: ovm__TestLib_MerkleTrie,
      TestLib_SecureMerkleTrie: ovm__TestLib_SecureMerkleTrie,
      TestLib_Buffer: ovm__TestLib_Buffer,
      TestLib_Bytes32Utils: ovm__TestLib_Bytes32Utils,
      TestLib_BytesUtils: ovm__TestLib_BytesUtils,
      TestLib_MerkleTree: ovm__TestLib_MerkleTree,
    }[name]
  } else {
    return {
      iL1ChugSplashDeployer,
      L1ChugSplashProxy,
      iOVM_CrossDomainMessenger,
      iOVM_L1CrossDomainMessenger,
      iOVM_L1MultiMessageRelayer,
      iOVM_L2CrossDomainMessenger,
      iOVM_L1ERC20Bridge,
      iOVM_L1StandardBridge,
      iOVM_L2ERC20Bridge,
      iOVM_CanonicalTransactionChain,
      iOVM_ChainStorageContainer,
      iOVM_StateCommitmentChain,
      iOVM_ExecutionManager,
      iOVM_SafetyChecker,
      iOVM_StateManager,
      iOVM_StateManagerFactory,
      iOVM_DeployerWhitelist,
      iOVM_ECDSAContractAccount,
      iOVM_L1MessageSender,
      iOVM_L2ToL1MessagePasser,
      ERC20,
      Errors,
      iOVM_BondManager,
      iOVM_FraudVerifier,
      iOVM_StateTransitioner,
      iOVM_StateTransitionerFactory,
      Lib_CrossDomainUtils,
      OVM_CrossDomainEnabled,
      Lib_EIP155Tx,
      Lib_OVMCodec,
      Lib_PredeployAddresses,
      Lib_AddressManager,
      Lib_AddressResolver,
      Lib_ResolvedDelegateProxy,
      Lib_RLPReader,
      Lib_RLPWriter,
      IL2StandardERC20,
      IWETH9,
      L2StandardERC20,
      Lib_MerkleTrie,
      Lib_SecureMerkleTrie,
      Lib_Buffer,
      Lib_Bytes32Utils,
      Lib_BytesUtils,
      Lib_ErrorUtils,
      Lib_EthUtils,
      Lib_MerkleTree,
      Lib_ExecutionManagerWrapper,
      mockOVM_BondManager,
      OVM_L1CrossDomainMessenger,
      OVM_L1MultiMessageRelayer,
      OVM_L2CrossDomainMessenger,
      OVM_L1StandardBridge,
      OVM_L2StandardBridge,
      OVM_L2StandardTokenFactory,
      OVM_CanonicalTransactionChain,
      OVM_ChainStorageContainer,
      OVM_StateCommitmentChain,
      OVM_ExecutionManager,
      OVM_SafetyChecker,
      OVM_StateManager,
      OVM_StateManagerFactory,
      ERC1820ImplementerInterface,
      ERC1820Registry,
      OVM_DeployerWhitelist,
      OVM_ECDSAContractAccount,
      OVM_ETH,
      OVM_GasPriceOracle,
      OVM_L1MessageSender,
      OVM_L2ToL1MessagePasser,
      OVM_ProxyEOA,
      OVM_SequencerEntrypoint,
      OVM_SequencerFeeVault,
      Abs_FraudContributor,
      OVM_BondManager,
      OVM_FraudVerifier,
      OVM_StateTransitioner,
      OVM_StateTransitionerFactory,
      Helper_GasMeasurer,
      Helper_ModifiableStorage,
      Helper_PredeployCaller,
      Helper_SimpleProxy,
      Helper_TestRunner_CREATE,
      Helper_TestRunner,
      Mock_FraudVerifier,
      SafeMath,
      TestERC20,
      TestLib_EIP155Tx,
      TestLib_OVMCodec,
      TestLib_RLPReader,
      TestLib_RLPWriter,
      TestLib_MerkleTrie,
      TestLib_SecureMerkleTrie,
      TestLib_Buffer,
      TestLib_Bytes32Utils,
      TestLib_BytesUtils,
      TestLib_EthUtils,
      TestLib_MerkleTree,
    }[name]
  }
}
